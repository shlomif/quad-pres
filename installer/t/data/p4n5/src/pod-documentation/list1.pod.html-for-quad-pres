<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
 <head>
  <title>src/pod-documentation/list1.pod</title>
  <style>
/*
 * A stylesheet designed to be used with the HTML output of the
 * Perl module Text::VimColor.
 *
 * This is designed to make the highlighting look like the default gvim
 * colour scheme, with 'background=light'.
 *
 * Geoff Richards (qef@laxan.com)
 *
 * This CSS file (light.css) is public domain.  Do what you want with it.
 * That doesn't mean that HTML with this CSS in is public domain.
 */

body { color: black; background: white none }

A:link { color: #00F; background: white none }
A:visited { color: #909; background: white none }
A:hover { color: #F00; background: white none }
A:active { color: #F00; background: white none }

.synComment    { color: #0000FF }
.synConstant   { color: #FF00FF }
.synIdentifier { color: #008B8B }
.synStatement  { color: #A52A2A ; font-weight: bold }
.synPreProc    { color: #A020F0 }
.synType       { color: #2E8B57 ; font-weight: bold }
.synSpecial    { color: #6A5ACD }
.synUnderlined { color: #000000 ; text-decoration: underline }
.synError      { color: #FFFFFF ; background: #FF0000 none }
.synTodo       { color: #0000FF ; background: #FFFF00 none }
</style>
 </head>
 <body>

<pre><span class="synStatement">=head1</span><span class="synConstant"> All you wanted to know about animals.</span>

<span class="synStatement">=head2</span><span class="synConstant"> Introduction</span>

This document aims to explain about animals.

<span class="synStatement">=head2</span><span class="synConstant"> Mammals.</span>

<span class="synStatement">=head3</span><span class="synConstant"> Cats</span>

Cats are awesome. They are useful for keeping the rats' population at
bay.

<span class="synStatement">=head3</span><span class="synConstant"> Dogs</span>

Dogs have been called Man's best friend.

Here is an example program to name your dog:

<span class="synPreProc">    #!/usr/bin/perl</span>

<span class="synPreProc">    use strict;</span>
<span class="synPreProc">    use warnings;</span>

<span class="synPreProc">    my @dog_names = (qw(Rex George Beethoven Max Rocky Lucky Cody));</span>

<span class="synPreProc">    print &quot;Name your dog &quot; . $dog_names[rand(@dog_names)] . &quot;!\n&quot;;</span>

Put it in a file and run it. This program will generate one of the following
names:

<span class="synStatement">=over</span> <span class="synConstant">4</span>

<span class="synStatement">=item</span><span class="synConstant"> * Rex</span>

Rex like the dinosaur.

<span class="synStatement">=item</span><span class="synConstant"> * George</span>

Like George Washington.

<span class="synStatement">=item</span><span class="synConstant"> * Beethoven</span>

Last name of the famous composer.

<span class="synStatement">=item</span><span class="synConstant"> * Max</span>

Short for Maximilian.

<span class="synStatement">=item</span><span class="synConstant"> * Rocky</span>

Like the film.

<span class="synStatement">=item</span><span class="synConstant"> * Lucky</span>

A lucky dog.

<span class="synStatement">=item</span><span class="synConstant"> * Cody</span>

For good coding.

<span class="synStatement">=back</span>
</pre>

 </body>
</html>
