<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
 <head>
  <title>src/new-features/ls.pl</title>
  <style>
/*
 * A stylesheet designed to be used with the HTML output of the
 * Perl module Text::VimColor.
 *
 * This is designed to make the highlighting look like the default gvim
 * colour scheme, with 'background=light'.
 *
 * Geoff Richards (qef@laxan.com)
 *
 * This CSS file (light.css) is public domain.  Do what you want with it.
 * That doesn't mean that HTML with this CSS in is public domain.
 */

body { color: black; background: white none }

A:link { color: #00F; background: white none }
A:visited { color: #909; background: white none }
A:hover { color: #F00; background: white none }
A:active { color: #F00; background: white none }

.synComment    { color: #0000FF }
.synConstant   { color: #FF00FF }
.synIdentifier { color: #008B8B }
.synStatement  { color: #A52A2A ; font-weight: bold }
.synPreProc    { color: #A020F0 }
.synType       { color: #2E8B57 ; font-weight: bold }
.synSpecial    { color: #6A5ACD }
.synUnderlined { color: #000000 ; text-decoration: underline }
.synError      { color: #FFFFFF ; background: #FF0000 none }
.synTodo       { color: #0000FF ; background: #FFFF00 none }
</style>
 </head>
 <body>

<pre><span class="synPreProc">#!/usr/bin/perl</span>

<span class="synStatement">use strict</span>;
<span class="synStatement">use warnings</span>;

<span class="synStatement">sub </span><span class="synIdentifier">get_entries</span>
{
    <span class="synStatement">my</span> <span class="synIdentifier">$dir_path</span> = <span class="synStatement">shift</span>;

    <span class="synStatement">opendir</span> <span class="synStatement">my</span> <span class="synIdentifier">$dir_handle</span>, <span class="synIdentifier">$dir_path</span>
        <span class="synStatement">or</span> <span class="synStatement">die</span> <span class="synConstant">&quot;Cannot open '</span><span class="synIdentifier">$dir_path</span><span class="synConstant">' as a directory - </span><span class="synIdentifier">$!</span><span class="synConstant">.&quot;</span>;

    <span class="synStatement">my</span> <span class="synIdentifier">@entries</span> = <span class="synStatement">readdir</span>(<span class="synIdentifier">$dir_handle</span>);

    <span class="synStatement">closedir</span>(<span class="synIdentifier">$dir_handle</span>);

    <span class="synStatement">return</span> [ <span class="synStatement">sort</span> <span class="synStatement">{</span> <span class="synIdentifier">$a</span> <span class="synStatement">cmp</span> <span class="synIdentifier">$b</span> <span class="synStatement">}</span> <span class="synIdentifier">@entries</span> ];
}

<span class="synStatement">foreach</span> <span class="synStatement">my</span> <span class="synIdentifier">$arg</span> (<span class="synIdentifier">@ARGV</span>)
{
    <span class="synStatement">print</span> <span class="synConstant">&quot;== Listing for </span><span class="synIdentifier">$arg</span><span class="synConstant"> ==</span><span class="synSpecial">\n</span><span class="synConstant">&quot;</span>;
    <span class="synStatement">foreach</span> <span class="synStatement">my</span> <span class="synIdentifier">$entry</span> (<span class="synIdentifier">@{</span>get_entries(<span class="synIdentifier">$arg</span>)<span class="synIdentifier">}</span>)
    {
        <span class="synStatement">print</span> <span class="synIdentifier">$entry</span>, <span class="synConstant">&quot;</span><span class="synSpecial">\n</span><span class="synConstant">&quot;</span>;
    }
}
</pre>

 </body>
</html>
