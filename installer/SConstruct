import os

env = Environment()

# TODO : Implement a user-specified perl path 

# What to do:
# 1. Read the option.
# 2. If None - keep PERL_PATH as is.
# 3. If empty - find one from the WhereIs.
# 4. If not empty - assign it as the Perl interpreter.
# 5. If the setting is not the same as PERL_PATH, or if the file PERL_PATH.txt
#    does not exist change the setting in the file PERL_PATH.txt.
# 6. Make sure all the scripts that require PERL_PATH depend upon 
#    the file.

if (ARGUMENTS.has_key('PATH_PERL') or not os.access('PATH_PERL.setting', os.F_OK)):
    path_perl = ARGUMENTS.get('PATH_PERL', '')
    if path_perl == '':
        path_perl = env.WhereIs("perl")
    if os.access('PATH_PERL.setting', os.F_OK):
        existing = open('PATH_PERL.setting').read()
    else:
        existing = None
    if existing != path_perl:
        f = open('PATH_PERL.setting', 'wb')
        f.write(path_perl)
        f.close()
       
config_file = 'quad-pres.conf'
opts = Options(config_file)
perl_path = env.WhereIs("perl");

opts.Add(PathOption('PREFIX',
    'Directory to install under (Default: /usr/local)',
    '/usr/local'))
opts.Add('DESTDIR', 
        'Prefix to append to the installation directory (without affecting the paths in the files) - Default: empty',
    '')
opts.Add(PathOption('MANDIR',
    'Directory to install the man pages in (Default: $PREFIX/man)',
    '$PREFIX/man'))


opts.Update(env)
opts.Save(config_file, env)

# Paths
prefix = '$PREFIX'
bindir = prefix + '/bin'
datadir = prefix + '/share'
pkgdatadir = datadir + '/quad-pres'
modulesdir = pkgdatadir + '/perl5'
qpscriptsdir = pkgdatadir + '/scripts'
wml_files_dir = pkgdatadir + '/wml'
template_dir = pkgdatadir + '/template'

mandir = env['MANDIR']
man1dir = mandir + '/man1'

def build_script_file(env, target, source):
    filename = str(target[0])
    f = open(filename+".pl", 'rt');
    lines = f.readlines()
    f.close()
    new_lines = []
    for l in lines:
        # TODO : Replace it with something better, based on PREFIX, etc.
        new_lines.append(l.replace('{QP_MODULES_DIR}', modulesdir))
    lines = new_lines
    f = open("PATH_PERL.setting")
    path_perl = f.read()
    f.close()
    lines[0] = lines[0].replace('/usr/bin/perl', path_perl)
    f = open(filename, 'wt')
    f.writelines(lines)
    f.close()
    os.chmod(filename, 0755)

def script_alias(s_path):
    env.Alias('build',
        env.Command(s_path,
            [s_path+".pl", "PATH_PERL.setting", "quad-pres.conf"],
            build_script_file
       )
    )

perl5_scripts = ["clear-tree.pl", "fix-gvim-html.pl", "html-server-to-hd.pl",
    "Render_all_contents.pl", "render-file.pl", "upload.pl"]

perl5_scripts_dir = "perl5/scripts"

def destdir_install(dir, file):
    env.Alias('install', env.Install('$DESTDIR' + dir, file))

for script in perl5_scripts:
    s_path = perl5_scripts_dir + "/" + script
    script_alias(s_path)
    destdir_install(qpscriptsdir, env.File(script, perl5_scripts_dir))

# Build and install the quadp program
script_alias("perl5/quadp")
destdir_install(bindir, env.File("quadp", "perl5"))


def build_path_pm(env, target, source):
    filename = str(target[0])
    f = open(filename+".pl", 'rt')
    data = f.read()
    f.close()
    f = open(filename, 'wt')
    f.write(data.replace('{QP_PKG_DATA_DIR}', pkgdatadir))
    f.close()

env.Alias('build',
        env.Command("perl5/Shlomif/Quad/Pres/Path.pm",
            ["perl5/Shlomif/Quad/Pres/Path.pm.pl", "quad-pres.conf"],
            build_path_pm
       )
    )

perl5_modules = [
'Shlomif/Arad/Object.pm',
'Shlomif/Gamla/Object.pm',
'Shlomif/Quad/Pres/CGI.pm',
'Shlomif/Quad/Pres/CmdLine.pm',
'Shlomif/Quad/Pres/Config.pm',
'Shlomif/Quad/Pres/Exception.pm',
'Shlomif/Quad/Pres/FS.pm',
'Shlomif/Quad/Pres/Getopt.pm',
'Shlomif/Quad/Pres/Path.pm',
'Shlomif/Quad/Pres.pm',
'Shlomif/Quad/Pres/Url.pm',
]

def plain_install(file, dist_dir, target_dir):
    path_comps = file.split("/")
    file_home = str.join("/", path_comps[0:-1])
    destdir_install(target_dir + "/" + file_home,
        env.File(path_comps[-1], dist_dir + "/" + file_home)
        )
    
for module in perl5_modules:
    plain_install(module, "perl5", modulesdir)

wml_files = [
'quadpres_main.wml',
'themes/alon-altman-text/template.wml',
'themes/shlomif-text/template.wml',
'wml_helpers.wml',
]

for file in wml_files:
    plain_install(file, "wml", wml_files_dir);
 
template_files = [
'style.css',
'template.html.wml',
]

for file in template_files:
    plain_install(file, "template", template_dir);

# Build and install the man page
env.Alias('build',
    env.Command("perl5/quadp.1",
        "perl5/quadp",
        "pod2man --section=1 --center=\"Quad-Pres\" $SOURCES > $TARGET",
    )
)

destdir_install(man1dir, env.File("quadp.1", "perl5"))

# Set the default target to build.
env.Default('build');


